apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.fabinpaul.project_2_popularmovies"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "API_KEY", "\""+getApiKey()+"\""
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support:support-v4:$supportLibraryVersion"
    compile "com.squareup.retrofit2:retrofit:$retrofit2Version"
    compile "com.squareup.retrofit2:converter-gson:$retrofit2Version"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofit2Version"
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.google.android:flexbox:0.2.4'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    testCompile 'org.mockito:mockito-core:2.2.29'
}

def getApiKey(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('local.properties')))
    return props['API_KEY']
}
